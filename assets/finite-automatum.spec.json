{
  "keywords": ["f32", "f64", "i32", "bool", "if", "while", "do", "else", "macro", "end", "swap", "dup", "dup2", "dump", "range"],
  "categories": {
    "control_flow": ["if", "while", "do", "else", "end"],
    "stack": ["dup", "dump"],
    "preprocessor": ["macro"]
  },
  "regex_alias": {
    "digit": "[0-9]",
    "digit_except_zero": "[1-9]",
    "hex_digit": "[0-9a-fA-F]",
    "space_and_tabs": "[\\s\\t]",
    "string_content": "([^\"\\\n]|\\.)",
    "identifier_start": "[a-zA-Z_]",
    "identifier_body": "[a-zA-Z0-9_?!()]",
    "arithmetic_symbols": "[-+*%/]",
    "comparison_symbols": "[><!]",
    "comment_body": "([^\\n]|\\.)"
  },
  "nodes": {
    "initial": {
      "type": "normal",
      "transitions": {
        "\\\\": "cmt-1",
        ":": "cast-1",
        "\"": "str-1",
        "{space_and_tabs}": "space-or-tab",
        "@": "assign-op",
        "[><!]": "cmp-1",
        "=": "cmp-op",
        "{identifier_start}": "id-1",
        "{arithmetic_symbols}": "arithmetic-op",
        "0": "num-1",
        "{digit_except_zero}": "num-3",
        "{outro}": "error_404"
      }
    },
    "cmt-1": {
      "type": "normal",
      "transitions": {
        "{comment_body}": "cmt-1",
        "\n": "comment",
        "{outro*}": "4"
      }
    },
    "comment": {
      "type": "computer",
      "computes": "comment",
      "exception": "backtrack"
    },
    "cast-1": {
      "type": "normal",
      "transitions": {
        ":": "cast-op",
        "{outro}": "cast-syntax-error"
      }
    },
    "cast-op": {
      "type": "computer",
      "computes": "cast-op"
    },
    "cast-syntax-error": {
      "type": "error",
      "error": "Invalid cast syntax"
    },
    "str-1": {
      "type": "normal",
      "transitions": {
        "{string_content}": "str-1",
        "\"": "string-literal",
        "{outro}": "error_invalid_string"
      }
    },
    "string-literal": {
      "type": "computer",
      "computes": "string-literal"
    },
    "error_invalid_string": {
      "type": "error",
      "error": "Invalid string"
    },
    "space-or-tab": {
      "type": "computer",
      "computes": "space-or-tab"
    },
    "assign-op": {
      "type": "computer",
      "computes": "assign-op"
    },
    "cmp-1": {
      "type": "normal",
      "transitions": {
        "=": "cmp-op",
        "{outro}": "cmp-op*"
      }
    },
    "cmp-op": {
      "type": "computer",
      "computes": "cmp-op"
    },
    "cmp-op*": {
      "type": "computer",
      "computes": "cmp-op",
      "exception": "backtrack"
    },
    "id-1": {
      "type": "normal",
      "transitions": {
        "{identifier_body}": "id-1",
        "{outro}": "id"
      }
    },
    "id": {
      "type": "computer",
      "computes": "id",
      "exception": "identify_token_property"
    },
    "arithmetic-op": {
      "type": "computer",
      "computes": "arithmetic-op"
    },
    "num-1": {
      "type": "normal",
      "transitions": {
        "x": "num-2",
        "\\.": "num-5",
        "{outro}": "integer-literal"
      }
    },
    "num-2": {
      "type": "normal",
      "transitions": {
        "{hex_digit}": "num-4",
        "{outro}": "error_hex"
      }
    },
    "num-3": {
      "type": "normal",
      "transitions": {
        "{digit}": "num-3",
        "\\.": "num-5",
        "{outro}": "integer-literal"
      }
    },
    "num-4": {
      "type": "normal",
      "transitions": {
        "{hex_digit}": "num-4",
        "{outro}": "hex"
      }
    },
    "num-5": {
      "type": "normal",
      "transitions": {
        "{digit}": "num-6",
        "{outro}": "error_float_syntax"
      }
    },
    "num-6": {
      "type": "normal",
      "transitions": {
        "{digit}": "num-6",
        "{outro}": "float-literal"
      }
    },
    "integer-literal": {
      "type": "computer",
      "computes": "integer-literal",
      "exception": "backtrack"
    },
    "float-literal": {
      "type": "computer",
      "computes": "float-literal",
      "exception": "backtrack"
    },
    "hex": {
      "type": "computer",
      "computes": "hex",
      "exception": "compute_hex"
    },
    "error_hex": {
      "type": "error",
      "error": "Invalid hex number"
    },
    "error_float_syntax": {
      "type": "error",
      "error": "Invalid float syntax"
    },
    "error_404": {
      "type": "error",
      "error": "404"
    }
  }
}
